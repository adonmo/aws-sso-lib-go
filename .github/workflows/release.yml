name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
            ext: .exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Get version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          BINARY_NAME="aws-sso-util-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}"
          go build -ldflags "-X main.version=${{ steps.version.outputs.VERSION }}" -o $BINARY_NAME ./cmd/aws-sso-util

          # Create archive
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip "${BINARY_NAME%.exe}.zip" $BINARY_NAME
            echo "ASSET=${BINARY_NAME%.exe}.zip" >> $GITHUB_ENV
          else
            tar -czf "${BINARY_NAME}.tar.gz" $BINARY_NAME
            echo "ASSET=${BINARY_NAME}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload Release Asset
        uses: actions/upload-artifact@v4
        with:
          name: aws-sso-util-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ${{ env.ASSET }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate changelog
        id: changelog
        run: |
          if [ $(git tag --list | wc -l) -eq 1 ]; then
            # First release
            echo "CHANGELOG=Initial release of aws-sso-lib-go" >> $GITHUB_OUTPUT
          else
            # Get previous tag
            PREV_TAG=$(git tag --sort=-version:refname | sed -n '2p')
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s" ${PREV_TAG}..HEAD >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Changes

            ${{ steps.changelog.outputs.CHANGELOG }}

            ## Installation

            ### Go Install
            ```bash
            go install github.com/adonmo/aws-sso-lib-go/cmd/aws-sso-util@${{ github.ref_name }}
            ```

            ### Download Binary
            Download the appropriate binary for your platform from the assets below.

            ### Library Usage
            ```bash
            go get github.com/adonmo/aws-sso-lib-go@${{ github.ref_name }}
            ```

            ## Checksums

            All binaries are built with Go 1.22 and include checksums for verification.
          files: |
            artifacts/**/*
          draft: false
          prerelease: false
